{"version":3,"sources":["component/img/todo.png","component/todo.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","useState","inputData","setInputData","list","localStorage","getItem","console","log","JSON","parse","getlocalItems","items","setItems","useEffect","setItem","stringify","className","src","todo","alt","type","placeholder","value","onChange","e","target","title","onClick","map","elem","ind","id","updateditems","filter","deleteItem","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNAAe,MAA0B,iC,eCsG1BA,EArFF,WACT,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAIA,EAA0BF,mBAhBR,WAClB,IAAIG,EAAOC,aAAaC,QAAQ,SAEhC,OADAC,QAAQC,IAAIJ,GACRA,EACOK,KAAKC,MAAML,aAAaC,QAAQ,UAEhC,GAUwBK,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAsCA,OALAC,qBAAU,WACNT,aAAaU,QAAQ,QAASN,KAAKO,UAAUJ,MAC9C,CAACA,IAIA,mCACI,qBAAKK,UAAU,WAAf,SACI,sBAAKA,UAAU,aAAf,UACI,mCACI,qBAAKC,IAAKC,EAAMC,IAAI,aACpB,wFAGJ,sBAAKH,UAAU,WAAf,UACI,uBAAOI,KAAK,OAAOC,YAAY,sBAAsBC,MAAOrB,EACxDsB,SAAU,SAACC,GAAD,OAAOtB,EAAasB,EAAEC,OAAOH,UAE3C,mBAAGN,UAAU,qBAAqBU,MAAM,0BAA0BC,QAhDtE,WAEP1B,IAIDW,EAAS,GAAD,mBAAKD,GAAL,CAAYV,KACpBC,EAAa,WA4CL,qBAAKc,UAAU,YAAf,SAEQL,EAAMiB,KAAI,SAACC,EAAMC,GACb,OACI,sBAAKd,UAAU,WAAf,UACI,6BAAKa,IACL,mBAAGb,UAAU,2BAA2BU,MAAM,eAAeC,QAAS,kBA1CvF,SAACI,GAChBzB,QAAQC,IAAIwB,GACZ,IAAMC,EAAerB,EAAMsB,QAAO,SAACJ,EAAMC,GACrC,OAAOA,IAAQC,KAEnBnB,EAASoB,GAqCmGE,CAAWJ,QAF5DA,QAU/C,qBAAKd,UAAU,YAAf,SACI,wBAAQA,UAAU,eAAe,oBAAkB,aAAaW,QAzClE,WACdf,EAAS,KAwCO,SAAoF,0DCjF7FuB,EAPI,WACjB,OACA,mCACA,cAAC,EAAD,OCMaC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.632136cf.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/todo.3f22c415.png\";","import React, { useState, useEffect } from 'react'\r\nimport todo from \"./img/todo.png\"\r\nimport \"../App.css\"\r\n\r\n\r\n// get data from local storage\r\nconst getlocalItems = () => {\r\n    let list = localStorage.getItem('lists');\r\n    console.log(list);\r\n    if (list) {\r\n        return JSON.parse(localStorage.getItem('lists'));\r\n    } else {\r\n        return [];\r\n    }\r\n\r\n}\r\n\r\nconst Todo = () => {\r\n    const [inputData, setInputData] = useState('');\r\n\r\n    // puting empty array that means items value should be empty array\r\n\r\n    const [items, setItems] = useState(getlocalItems());\r\n\r\n    //defining add item\r\n    const addItem = () => {\r\n        //using if statement because of void inputs by users\r\n        if (!inputData) {\r\n\r\n\r\n        } else {\r\n            setItems([...items, inputData]);\r\n            setInputData('')\r\n        }\r\n\r\n    }\r\n    //    add with enter button\r\n\r\n\r\n    //delte the items\r\n    const deleteItem = (id) => {\r\n        console.log(id);\r\n        const updateditems = items.filter((elem, ind) => {\r\n            return ind !== id;\r\n        });\r\n        setItems(updateditems);\r\n\r\n    }\r\n\r\n    // remove all\r\n    const removeAll = () => {\r\n        setItems([]);\r\n    }\r\n\r\n    // store data in local storage\r\n    useEffect(() => {\r\n        localStorage.setItem('lists', JSON.stringify(items))\r\n    }, [items]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"main-div\">\r\n                <div className=\" child-div\">\r\n                    <figure>\r\n                        <img src={todo} alt=\"todologo\" />\r\n                        <figcaption>You Can Start Adding From Here ðŸ‘‡</figcaption>\r\n                    </figure>\r\n\r\n                    <div className=\"addItems\">\r\n                        <input type=\"text\" placeholder=\"Make Your List Here\" value={inputData}\r\n                            onChange={(e) => setInputData(e.target.value)} />\r\n\r\n                        <i className=\"fa fa-plus add-btn\" title='Add Item Or press Enter' onClick={addItem} ></i>\r\n                    </div>\r\n\r\n                    <div className=\"showItems\">\r\n                        {\r\n                            items.map((elem, ind) => {\r\n                                return (\r\n                                    <div className=\"eachItem\" key={ind}>\r\n                                        <h3>{elem}</h3>\r\n                                        <i className=\"far fa-trash-alt add-btn\" title=\"Delete Items\" onClick={() => deleteItem(ind)}></i>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n\r\n                    </div>\r\n                    {/* clear All buttons and remove button */}\r\n                    <div className=\"showitems\">\r\n                        <button className=\"btn effect04\" data-sm-link-text=\"remove All\" onClick={removeAll}><span>check List</span></button>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\nexport default Todo;\r\n","import React from 'react'\nimport Todo from \"../src/component/todo\"\n\nexport const App = () => {\n  return (\n  <>\n  <Todo />\n  </>\n  )\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}